<?php
/**
 * This file is part of the advent-code-2016 project.
 *
 * (c) Yannick Voyer <star.yvoyer@gmail.com> (http://github.com/yvoyer)
 */

final class Day2Test extends PHPUnit_Framework_TestCase
{
    /**
     * @param $expected
     * @param $encryptedString
     *
     * @dataProvider provideInputs
     */
    public function test_it_should_decode_code_with_nine_digit_keypad($expected, $encryptedString)
    {
        $actual = Day2::decodeCode($encryptedString, new NineDigitKeyPad());
        $this->assertEquals($expected, $actual);
    }

    public static function provideInputs()
    {
        return [
            [2, "U"],
            [8, "D"],
            [6, "R"],
            [4, "L"],
            'Should ignore up on 1' => [1, "ULU"],
            'Should ignore left on 1' => [1, "ULL"],
            'Should ignore up on 2' => [2, "UU"],
            'Should ignore up on 3' => [3, "URU"],
            'Should ignore right on 3' => [3, "URR"],
            'Should ignore left on 4' => [4, "LL"],
            'Should ignore right on 6' => [6, "RR"],
            'Should ignore left on 7' => [7, "LDL"],
            'Should ignore down on 7' => [7, "LDD"],
            'Should ignore down on 8' => [8, "DD"],
            'Should ignore right on 9' => [9, "RDR"],
            'Should ignore down on 9' => [9, "RDD"],
            'example' => [1985, $code = <<<CODE
ULL
RRDDD
LURDL
UUUUD
CODE
            ],
            'part 1' => [44558, $code = <<<CODE
DUURRDRRURUUUDLRUDDLLLURULRRLDULDRDUULULLUUUDRDUDDURRULDRDDDUDDURLDLLDDRRURRUUUDDRUDDLLDDDURLRDDDULRDUDDRDRLRDUULDLDRDLUDDDLRDRLDLUUUDLRDLRUUUDDLUURRLLLUUUUDDLDRRDRDRLDRLUUDUDLDRUDDUDLLUUURUUDLULRDRULURURDLDLLDLLDUDLDRDULLDUDDURRDDLLRLLLLDLDRLDDUULRDRURUDRRRDDDUULRULDDLRLLLLRLLLLRLURRRLRLRDLULRRLDRULDRRLRURDDLDDRLRDLDRLULLRRUDUURRULLLRLRLRRUDLRDDLLRRUDUDUURRRDRDLDRUDLDRDLUUULDLRLLDRULRULLRLRDRRLRLULLRURUULRLLRRRDRLULUDDUUULDULDUDDDUDLRLLRDRDLUDLRLRRDDDURUUUDULDLDDLDRDDDLURLDRLDURUDRURDDDDDDULLDLDLU
LURLRUURDDLDDDLDDLULRLUUUDRDUUDDUDLDLDDLLUDURDRDRULULLRLDDUDRRDRUDLRLDDDURDUURLUURRLLDRURDRLDURUDLRLLDDLLRDRRLURLRRUULLLDRLULURULRRDLLLDLDLRDRRURUUUDUDRUULDLUDLURLRDRRLDRUDRUDURLDLDDRUULDURDUURLLUDRUUUUUURRLRULUDRDUDRLLDUDUDUULURUURURULLUUURDRLDDRLUURDLRULDRRRRLRULRDLURRUULURDRRLDLRUURUDRRRDRURRLDDURLUDLDRRLDRLLLLRDUDLULUDRLLLDULUDUULLULLRLURURURDRRDRUURDULRDDLRULLLLLLDLLURLRLLRDLLRLUDLRUDDRLLLDDUDRLDLRLDUDU
RRDDLDLRRUULRDLLURLRURDLUURLLLUUDDULLDRURDUDRLRDRDDUUUULDLUDDLRDULDDRDDDDDLRRDDDRUULDLUDUDRRLUUDDRUDLUUDUDLUDURDURDLLLLDUUUUURUUURDURUUUUDDURULLDDLDLDLULUDRULULULLLDRLRRLLDLURULRDLULRLDRRLDDLULDDRDDRURLDLUULULRDRDRDRRLLLURLLDUUUDRRUUURDLLLRUUDDDULRDRRUUDDUUUDLRRURUDDLUDDDUDLRUDRRDLLLURRRURDRLLULDUULLURRULDLURRUURURRLRDULRLULUDUULRRULLLDDDDURLRRRDUDULLRRDURUURUUULUDLDULLUURDRDRRDURDLUDLULRULRLLURULDRUURRRRDUDULLLLLRRLRUDDUDLLURLRDDLLDLLLDDUDDDDRDURRL
LLRURUDUULRURRUDURRDLUUUDDDDURUUDLLDLRULRUUDUURRLRRUDLLUDLDURURRDDLLRUDDUDLDUUDDLUUULUUURRURDDLUDDLULRRRUURLDLURDULULRULRLDUDLLLLDLLLLRLDLRLDLUULLDDLDRRRURDDRRDURUURLRLRDUDLLURRLDUULDRURDRRURDDDDUUUDDRDLLDDUDURDLUUDRLRDUDLLDDDDDRRDRDUULDDLLDLRUDULLRRLLDUDRRLRURRRRLRDUDDRRDDUUUDLULLRRRDDRUUUDUUURUULUDURUDLDRDRLDLRLLRLRDRDRULRURLDDULRURLRLDUURLDDLUDRLRUDDURLUDLLULDLDDULDUDDDUDRLRDRUUURDUULLDULUUULLLDLRULDULUDLRRURDLULUDUDLDDRDRUUULDLRURLRUURDLULUDLULLRD
UURUDRRDDLRRRLULLDDDRRLDUDLRRULUUDULLDUDURRDLDRRRDLRDUUUDRDRRLLDULRLUDUUULRULULRUDURDRDDLDRULULULLDURULDRUDDDURLLDUDUUUULRUULURDDDUUUURDLDUUURUDDLDRDLLUDDDDULRDLRUDRLRUDDURDLDRLLLLRLULRDDUDLLDRURDDUDRRLRRDLDDUDRRLDLUURLRLLRRRDRLRLLLLLLURULUURRDDRRLRLRUURDLULRUUDRRRLRLRULLLLUDRULLRDDRDDLDLDRRRURLURDDURRLUDDULRRDULRURRRURLUURDDDUDLDUURRRLUDUULULURLRDDRULDLRLLUULRLLRLUUURUUDUURULRRRUULUULRULDDURLDRRULLRDURRDDDLLUDLDRRRRUULDDD
CODE
            ]
        ];
    }

    /**
     * @param $expected
     * @param $encryptedString
     *
     * @dataProvider provideStarShapedKeypadInputs
     */
    public function test_it_should_decode_code_with_star_shaped_keypad($expected, $encryptedString)
    {
        $actual = Day2::decodeCode($encryptedString, new StarShapedKeyPad());
        $this->assertEquals($expected, $actual);
    }

    public static function provideStarShapedKeypadInputs()
    {
        return [
            'Right of 1' => [1, 'RRUUR'],
            'Right of 2' => [3, 'RUR'],
            'Right of 3' => [4, 'RRUR'],
            'Right of 4' => [4, 'RRRUR'],
            'Right of 5' => [6, 'R'],
            'Right of 6' => [7, 'RR'],
            'Right of 7' => [8, 'RRR'],
            'Right of 8' => [9, 'RRRR'],
            'Right of 9' => [9, 'RRRRR'],
            'Right of A' => ['B', 'RDR'],
            'Right of B' => ['C', 'RRDR'],
            'Right of C' => ['C', 'RRRDR'],
            'Right of D' => ['D', 'RRDDR'],
            'Up of 1' => [1, 'RRUUU'],
            'Up of 2' => [2, 'RUU'],
            'Up of 3' => [1, 'RRUU'],
            'Up of 4' => [4, 'RRRUU'],
            'Up of 5' => [5, 'U'],
            'Up of 6' => [2, 'RU'],
            'Up of 7' => [3, 'RRU'],
            'Up of 8' => [4, 'RRRU'],
            'Up of 9' => [9, 'RRRRU'],
            'Up of A' => [6, 'RDU'],
            'Up of B' => [7, 'RRDU'],
            'Up of C' => [8, 'RRRDU'],
            'Up of D' => ['B', 'RRDDU'],
            'Down of 1' => [3, 'RRUUD'],
            'Down of 2' => [6, 'RUD'],
            'Down of 3' => [7, 'RRUD'],
            'Down of 4' => [8, 'RRRUD'],
            'Down of 5' => [5, 'D'],
            'Down of 6' => ['A', 'RD'],
            'Down of 7' => ['B', 'RRD'],
            'Down of 8' => ['C', 'RRRD'],
            'Down of 9' => [9, 'RRRRD'],
            'Down of A' => ['A', 'RDD'],
            'Down of B' => ['D', 'RRDD'],
            'Down of C' => ['C', 'RRRDD'],
            'Down of D' => ['D', 'RRDDD'],
            'Left of 1' => [1, 'RRUUL'],
            'Left of 2' => [2, 'RUL'],
            'Left of 3' => [2, 'RRUL'],
            'Left of 4' => [3, 'RRRUL'],
            'Left of 5' => [5, 'L'],
            'Left of 6' => [5, 'RL'],
            'Left of 7' => [6, 'RRL'],
            'Left of 8' => [7, 'RRRL'],
            'Left of 9' => [8, 'RRRRL'],
            'Left of A' => ['A', 'RDL'],
            'Left of B' => ['A', 'RRDL'],
            'Left of C' => ['B', 'RRRDL'],
            'Left of D' => ['D', 'RRDDL'],
            'Misc' => [8, 'RRUUURLDLLUDDDDLRRRUUULDRRRRUDRL'],
            'example' => ['5DB3', $code = <<<CODE
ULL
RRDDD
LURDL
UUUUD
CODE
            ],
            'part 2' => ['6BBAD', $code = <<<CODE
DUURRDRRURUUUDLRUDDLLLURULRRLDULDRDUULULLUUUDRDUDDURRULDRDDDUDDURLDLLDDRRURRUUUDDRUDDLLDDDURLRDDDULRDUDDRDRLRDUULDLDRDLUDDDLRDRLDLUUUDLRDLRUUUDDLUURRLLLUUUUDDLDRRDRDRLDRLUUDUDLDRUDDUDLLUUURUUDLULRDRULURURDLDLLDLLDUDLDRDULLDUDDURRDDLLRLLLLDLDRLDDUULRDRURUDRRRDDDUULRULDDLRLLLLRLLLLRLURRRLRLRDLULRRLDRULDRRLRURDDLDDRLRDLDRLULLRRUDUURRULLLRLRLRRUDLRDDLLRRUDUDUURRRDRDLDRUDLDRDLUUULDLRLLDRULRULLRLRDRRLRLULLRURUULRLLRRRDRLULUDDUUULDULDUDDDUDLRLLRDRDLUDLRLRRDDDURUUUDULDLDDLDRDDDLURLDRLDURUDRURDDDDDDULLDLDLU
LURLRUURDDLDDDLDDLULRLUUUDRDUUDDUDLDLDDLLUDURDRDRULULLRLDDUDRRDRUDLRLDDDURDUURLUURRLLDRURDRLDURUDLRLLDDLLRDRRLURLRRUULLLDRLULURULRRDLLLDLDLRDRRURUUUDUDRUULDLUDLURLRDRRLDRUDRUDURLDLDDRUULDURDUURLLUDRUUUUUURRLRULUDRDUDRLLDUDUDUULURUURURULLUUURDRLDDRLUURDLRULDRRRRLRULRDLURRUULURDRRLDLRUURUDRRRDRURRLDDURLUDLDRRLDRLLLLRDUDLULUDRLLLDULUDUULLULLRLURURURDRRDRUURDULRDDLRULLLLLLDLLURLRLLRDLLRLUDLRUDDRLLLDDUDRLDLRLDUDU
RRDDLDLRRUULRDLLURLRURDLUURLLLUUDDULLDRURDUDRLRDRDDUUUULDLUDDLRDULDDRDDDDDLRRDDDRUULDLUDUDRRLUUDDRUDLUUDUDLUDURDURDLLLLDUUUUURUUURDURUUUUDDURULLDDLDLDLULUDRULULULLLDRLRRLLDLURULRDLULRLDRRLDDLULDDRDDRURLDLUULULRDRDRDRRLLLURLLDUUUDRRUUURDLLLRUUDDDULRDRRUUDDUUUDLRRURUDDLUDDDUDLRUDRRDLLLURRRURDRLLULDUULLURRULDLURRUURURRLRDULRLULUDUULRRULLLDDDDURLRRRDUDULLRRDURUURUUULUDLDULLUURDRDRRDURDLUDLULRULRLLURULDRUURRRRDUDULLLLLRRLRUDDUDLLURLRDDLLDLLLDDUDDDDRDURRL
LLRURUDUULRURRUDURRDLUUUDDDDURUUDLLDLRULRUUDUURRLRRUDLLUDLDURURRDDLLRUDDUDLDUUDDLUUULUUURRURDDLUDDLULRRRUURLDLURDULULRULRLDUDLLLLDLLLLRLDLRLDLUULLDDLDRRRURDDRRDURUURLRLRDUDLLURRLDUULDRURDRRURDDDDUUUDDRDLLDDUDURDLUUDRLRDUDLLDDDDDRRDRDUULDDLLDLRUDULLRRLLDUDRRLRURRRRLRDUDDRRDDUUUDLULLRRRDDRUUUDUUURUULUDURUDLDRDRLDLRLLRLRDRDRULRURLDDULRURLRLDUURLDDLUDRLRUDDURLUDLLULDLDDULDUDDDUDRLRDRUUURDUULLDULUUULLLDLRULDULUDLRRURDLULUDUDLDDRDRUUULDLRURLRUURDLULUDLULLRD
UURUDRRDDLRRRLULLDDDRRLDUDLRRULUUDULLDUDURRDLDRRRDLRDUUUDRDRRLLDULRLUDUUULRULULRUDURDRDDLDRULULULLDURULDRUDDDURLLDUDUUUULRUULURDDDUUUURDLDUUURUDDLDRDLLUDDDDULRDLRUDRLRUDDURDLDRLLLLRLULRDDUDLLDRURDDUDRRLRRDLDDUDRRLDLUURLRLLRRRDRLRLLLLLLURULUURRDDRRLRLRUURDLULRUUDRRRLRLRULLLLUDRULLRDDRDDLDLDRRRURLURDDURRLUDDULRRDULRURRRURLUURDDDUDLDUURRRLUDUULULURLRDDRULDLRLLUULRLLRLUUURUUDUURULRRRUULUULRULDDURLDRRULLRDURRDDDLLUDLDRRRRUULDDD
CODE
            ]
        ];
    }
}
